// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Session    Session[]
  Cart       Cart[]
  Address    Address[]
  Historic   Historic[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  image       String   @db.Text
  description String   @db.VarChar(255)
  price       Int      
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Cart        Cart[]
  Historic    Historic[]
}

model Cart {
  id          Int      @id @default(autoincrement())
  userId      Int
  User        User     @relation(fields: [userId], references: [id])
  productId   Int
  Product     Product  @relation(fields: [productId], references: [id])
  quantity    Int  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt    
}

model Address {
  id            Int        @id @default(autoincrement())
  userId        Int
  User          User       @relation(fields: [userId], references: [id])
  street        String     @db.VarChar(255)
  city          String     @db.VarChar(255)
  state         String     @db.VarChar(255)
  number        String     @db.VarChar(255)
  neighborhood  String     @db.VarChar(255)
  complement    String?    @db.VarChar(255)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Payment {
  id             Int      @id @default(autoincrement())
  value          Int
  cardIssuer     String
  cardLastDigits String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Historic {
  id             Int      @id @default(autoincrement())
  userId         Int
  User           User     @relation(fields: [userId], references: [id])
  productId      Int
  Product        Product  @relation(fields: [productId], references: [id])
  quantity       Int  
  value          Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}